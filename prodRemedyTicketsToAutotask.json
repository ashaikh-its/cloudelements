{"id":6368,"name":"prodRemedyTicketsToAutotask","description":"Get incidents/workorder from Remedy and post ticket in Autotask.","userId":154529,"accountId":154251,"createdDate":"2018-09-05T21:45:07Z","steps":[{"id":63577,"onSuccess":["getTicketsFirstPage"],"onFailure":[],"name":"buildMetadata","type":"script","properties":{"body":"const moment = require('moment');\n\nconst formattedDate = moment().subtract(246, 'minutes').format('MM/DD/YY hh:mm:ss a');\n\ndone({\n  \"query\":{\n     \"where\":\"'Assigned Group' = \\\"\" + config.assignedGroup + \"\\\"\" + \" AND 'Submit Date' >= \\\"09/01/18\\\" AND 'Last Modified Date' >= \" + \"\\\"\" + formattedDate + \"\\\"\"\n  }\n});"}},{"id":63569,"onSuccess":["loopTicketsNextPage"],"onFailure":["loopTicketsNextPage"],"name":"patchIncidentAutotaskNextPage","type":"elementRequest","properties":{"body":"${steps.loopTicketsAutotaskNextPage.entry}","elementInstanceId":"${config.destinationInstance}","api":"/hubs/helpdesk/${config.destination}/${steps.loopIncidentAutotaskNextPage.entry.id}","method":"POST"}},{"id":63584,"onSuccess":["loopTicketsNextPage"],"onFailure":["loopTicketsNextPage"],"name":"postIncidentAutotaskNextPage","type":"elementRequest","properties":{"body":"${steps.loopTicketsNextPage.entry}","method":"POST","elementInstanceId":"${config.destinationInstance}","api":"/hubs/helpdesk/${config.destination}"}},{"id":63571,"onSuccess":["loopTicketFirstPage"],"onFailure":["loopTicketFirstPage"],"name":"patchIncidentAutotaskFirstPage","type":"elementRequest","properties":{"body":"${steps.loopTicketFirstPage.entry}","api":"/hubs/helpdesk/${config.destination}/${steps.loopIncidentAutotaskFirstPage.entry.id}","method":"PATCH","elementInstanceId":"${config.destinationInstance}","path":""}},{"id":63570,"onSuccess":["loopTicketFirstPage"],"onFailure":["loopTicketFirstPage"],"name":"postIncidentAutotaskFirstPage","type":"elementRequest","properties":{"body":"${steps.loopTicketFirstPage.entry}","method":"POST","api":"/hubs/helpdesk/${config.destination}","elementInstanceId":"${config.destinationInstance}"}},{"id":63597,"onSuccess":[],"onFailure":[],"name":"checkFirstPageRecordsReturned","type":"filter","properties":{"body":"var varIndex = steps.loopTicketFirstPage\n\nif (steps.loopTicketFirstPage/200 == 1) {\n  done(true);\n}\ndone(false);"}},{"id":63596,"onSuccess":["GetNextPage"],"onFailure":[],"name":"SetPageNumber","type":"script","properties":{"body":"if (steps.SetPageNumber) {\n  done({ \n    \"query\":{\n      \"page\":steps.SetPageNumber.query.page + 1,\n      \"where\":steps.buildMetadata.query.where\n    }\n  });\n}\n\ndone({ \n  \"query\":{\n    \"page\":2,\n    \"where\":steps.buildMetadata.query.where\n  }\n});"}},{"id":63595,"onSuccess":["SetPageNumber"],"onFailure":[],"name":"SetNextPageFirst","type":"script","properties":{"body":"done({ \n  \"query\":{\n    \"page\":2\n  }\n});"}},{"id":63594,"onSuccess":["getTicketsFirstPage"],"onFailure":[],"name":"buildPreHookRequest","type":"script","properties":{"body":"const pageSize = parseInt(request_parameters['pageSize']) || 100; \nconst page = parseInt(request_parameters['page']) || 1; \nconst startRecord = (page*pageSize) - pageSize ;\nconst limit = pageSize;\n\nlet requestBody = request_vendor_body;\nrequestBody = requestBody.replace(/<urn:maxLimit>[0-9]*<\\/urn:maxLimit>/, `<urn:maxLimit>${limit}</urn:maxLimit>`)\nrequestBody = requestBody.replace(/<urn:startRecord>[0-9]*<\\/urn:startRecord>/, `<urn:startRecord>${startRecord}</urn:startRecord>`)\n\ndone({\n  \"request_vendor_body\":requestBody,\n})"}},{"id":63593,"onSuccess":[],"onFailure":[],"name":"isLastPage","type":"filter","properties":{"body":"if (steps.GetNextPage.response.body.length !== 0) {\n  done(true);\n}\ndone(false);"}},{"id":63592,"onSuccess":[],"onFailure":[],"name":"postTickets","type":"elementRequest","properties":{"body":"${steps.loopTicketsNextPage.entry}","api":"/hubs/${config.destinationElement}/${config.destination}","elementInstanceId":"${config.destinationInstance}","method":"POST"}},{"id":63591,"onSuccess":[],"onFailure":[],"name":"dbRetrieveTicket","type":"elementRequest","properties":{"body":"${steps.loopTicketsNextPage.response.body}","api":"/hubs/db/${config.destination}/{objectId}","elementInstanceId":"${config.destinationInstance}","method":"GET"}},{"id":63590,"onSuccess":[],"onFailure":[],"name":"isRecordExists","type":"filter","properties":{"body":"done(steps.dbRetrieveTicket.response.body.providerMessage === 'Record does not exist.');"}},{"id":63589,"onSuccess":[],"onFailure":[],"name":"postTicketFirstPage","type":"elementRequest","properties":{"body":"${steps.loopTicketFirstPage.entry}","api":"/hubs/${config.destinationElement}/${config.destination}","elementInstanceId":"${config.destinationInstance}","method":"POST"}},{"id":63588,"onSuccess":["getTicketsFirstPage"],"onFailure":[],"name":"getQuery","type":"script","properties":{"body":"done({\n  \"query\":{\n    \"q\":\"select * from \" + config.source + \" where createDate >= '2018-01-01T00:00:00+0000' and createDate < '2018-04-16T00:00:00+0000'\"}\n});"}},{"id":63587,"onSuccess":["isNullFirstPage"],"onFailure":["SetNextPageFirst"],"name":"loopTicketFirstPage","type":"loop","properties":{"list":"${steps.getTicketsFirstPage.response.body}"}},{"id":63586,"onSuccess":["buildMetadataAutotaskFirstPage"],"onFailure":[],"name":"isNullFirstPage","type":"filter","properties":{"body":"if (steps.loopTicketFirstPage.entry.AtId !== '') {\n  done(true);\n}\ndone(false);"}},{"id":63585,"onSuccess":["patchIncidentAutotaskNextPage"],"onFailure":[],"name":"isAutotaskTicketNextPageExists","type":"filter","properties":{"body":"if (steps.loopIncidentAutotaskNextPage.entry.id !== '') {\n  done(true);\n}\ndone(false);"}},{"id":63583,"onSuccess":[],"onFailure":["loopTicketsNextPage"],"name":"isNextPageExists","type":"filter","properties":{"body":"done(steps.GetNextPage.response.body.message === 'Request failed')"}},{"id":63582,"onSuccess":["postIncidentAutotaskFirstPage"],"onFailure":["loopIncidentAutotaskFirstPage"],"name":"isAutotaskTicketFirstPageExists","type":"filter","properties":{"body":"if(steps.getIncidentAutotaskFirstPage.response.headers.Elements-Returned-Count === 0){\n  done(true);\n}else{\n\tdone(false);\n}"}},{"id":63581,"onSuccess":["loopIncidentAutotaskFirstPage"],"onFailure":[],"name":"getIncidentAutotaskFirstPage","type":"elementRequest","properties":{"query":"${steps.buildMetadataAutotaskFirstPage.query}","api":"/hubs/helpdesk/${config.destination}","elementInstanceId":"${config.destinationInstance}","method":"GET"}},{"id":63580,"onSuccess":["patchIncidentAutotaskFirstPage"],"onFailure":["postIncidentAutotaskFirstPage"],"name":"loopIncidentAutotaskFirstPage","type":"loop","properties":{"list":"${steps.getIncidentAutotaskFirstPage.response.body}"}},{"id":63579,"onSuccess":["patchIncidentAutotaskNextPage"],"onFailure":["postIncidentAutotaskNextPage"],"name":"loopIncidentAutotaskNextPage","type":"loop","properties":{"list":"${steps.getIncidentAutotaskNextPage.response.body}"}},{"id":63578,"onSuccess":["isNullNextPage"],"onFailure":["SetPageNumber"],"name":"loopTicketsNextPage","type":"loop","properties":{"list":"${steps.GetNextPage.response.body}"}},{"id":63576,"onSuccess":["loopTicketFirstPage"],"onFailure":[],"name":"getTicketsFirstPage","type":"elementRequest","properties":{"acceptableStatusCodes":"502","retryDelay":"1","body":"","retryAttempts":"1","elementInstanceId":"${config.sourceInstance}","query":"${steps.buildMetadata.query}","api":"/hubs/helpdesk/${config.source}","method":"GET","retry":"false"}},{"id":63575,"onSuccess":["getIncidentAutotaskFirstPage"],"onFailure":[],"name":"buildMetadataAutotaskFirstPage","type":"script","properties":{"body":"const incidentNumber = steps.loopTicketFirstPage.entry.clientReferenceId;\n\ndone({\n  \"query\":{\n     \"where\":\"clientReferenceId =\" + \"'\" + incidentNumber + \"'\"\n  }\n});"}},{"id":63574,"onSuccess":["isNextPageExists"],"onFailure":[],"name":"GetNextPage","type":"elementRequest","properties":{"retryDelay":"5","acceptableStatusCodes":"502","retryAttempts":"3","query":"${steps.SetPageNumber.query}","api":"/hubs/helpdesk/${config.source}","elementInstanceId":"${config.sourceInstance}","method":"GET","retry":"false"}},{"id":63573,"onSuccess":["buildMetdataAutotaskNextPage"],"onFailure":[],"name":"isNullNextPage","type":"filter","properties":{"body":"if (steps.loopTicketFirstPage.entry.clientReferenceId !== '') {\n  done(true);\n}\ndone(false);"}},{"id":63572,"onSuccess":["getIncidentAutotaskNextPage"],"onFailure":[],"name":"buildMetdataAutotaskNextPage","type":"filter","properties":{"body":"const incidentNumber = steps.loopTicketNextPage.entry.clientReferenceId;\n\ndone({\n  \"query\":{\n     \"where\":\"clientReferenceId =\" + \"'\" + incidentNumber + \"'\"\n  }\n});"}},{"id":63568,"onSuccess":["loopIncidentAutotaskNextPage"],"onFailure":[],"name":"getIncidentAutotaskNextPage","type":"elementRequest","properties":{"query":"${steps.buildMetadataAutotaskNextPage.query}","api":"/hubs/helpdesk/${config.destination}","elementInstanceId":"${config.destinationInstance}","method":"GET"}}],"triggers":[{"id":5752,"onSuccess":["buildMetadata"],"onFailure":[],"type":"scheduled","async":true,"name":"trigger","properties":{"cron":"0 0/5 * 1/1 * ? *"}}],"active":true,"singleThreaded":false,"debugLoggingEnabled":true,"configuration":[{"id":17845,"key":"assignedGroup","name":"assignedGroup","type":"value","required":true},{"id":17839,"key":"destination","name":"destination","type":"value","required":true},{"id":17841,"key":"destinationInstance","name":"destinationInstance","type":"elementInstance","required":true},{"id":17842,"key":"source","name":"source","type":"value","required":true},{"id":17844,"key":"sourceInstance","name":"sourceInstance","type":"elementInstance","required":true}]}